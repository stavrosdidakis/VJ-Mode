<jittershader name="AB Luminosity based mixer">
	<description>
	Mix based on luminosity.
	</description>
	<param name="amount" type="float" default="0.">
		<description>Mix amount</description>
	</param>
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />	
	<language name="glsl" version="1.0">
		<bind param="amount" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

// texcoords
varying vec2 texcoord0;
varying vec2 texcoord1;

// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;

// blend amount
uniform float amount;


vec4 lumablend(vec4 myInput, vec4 previousmix, vec4 amount)
{
	vec4 lumcoeff = vec4(0.2125,0.7154,0.0721,0.0);
		
	float luma = dot(previousmix,lumcoeff);

	vec4 mixresult = mix(previousmix,myInput, luma*amount);
	
	return mixresult;
}

// entry point
void main()
{   
	vec4 two = vec4(2.0);	
	
	vec4 input0 = texture2DRect(tex0, texcoord0);
	vec4 input1 = texture2DRect(tex1, texcoord1);	


	vec4 mix1 = lumablend(input1, input0, amount* two);
	vec4 mix2 = lumablend(input0, input1, (1.0 - amount) * two);

	vec4 result = mix(mix1,mix2, amount);

	gl_FragColor = result;
}

]]>
		</program>
	</language>
</jittershader>	